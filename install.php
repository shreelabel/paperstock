<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// The rest of the install.php code follows below this point
session_start();

// Handle AJAX connection test request
if (isset($_POST['test_connection']) && $_POST['test_connection'] === 'true') {
    header('Content-Type: application/json');
    $db_type = $_POST['db_type'] ?? '';
    $host = $_POST['host'] ?? '';
    $dbname = $_POST['dbname'] ?? '';
    $username = $_POST['username'] ?? '';
    $password = $_POST['password'] ?? '';

    if ($db_type === 'mysql') {
        try {
            $test_conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
            $test_conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
            echo json_encode(['success' => true]);
        } catch(PDOException $e) {
            echo json_encode(['success' => false, 'error' => $e->getMessage()]);
        }
    } else {
        // SQLite connection doesn't require host/user/pass, just file existence/permissions
        // For a simple test, we can just assume it will work or check if the directory is writable
        // A more robust test might involve trying to open/create the file.
        // For now, we'll just return success for SQLite test button click.
         echo json_encode(['success' => true, 'message' => 'SQLite connection assumed successful.']);
    }
    exit; // Stop further script execution
}


// Check if already installed
if (file_exists('config.php') && !isset($_GET['reinstall'])) {
    header('Location: index.html');
    exit;
}

$step = $_GET['step'] ?? 1;
$error = ''; // General error
$success = '';
$connection_test_error = ''; // Specific error for connection test

if ($_POST) {
    if ($step == 1) {
        // Database configuration step (This block is now only for 'Next' button submission)
        $db_type = $_POST['db_type'];
        $host = $_POST['host'] ?? '';
        $dbname = $_POST['dbname'] ?? '';
        $username = $_POST['username'] ?? '';
        $password = $_POST['password'] ?? '';

        $_SESSION['db_config'] = compact('db_type', 'host', 'dbname', 'username', 'password');

        if ($db_type === 'sqlite') {
            header('Location: install.php?step=2');
            exit;
        } else {
            // Test MySQL connection on 'Next' click
            try {
                $test_conn = new PDO("mysql:host=$host;dbname=$dbname", $username, $password);
                $test_conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                header('Location: install.php?step=2');
                exit;
            } catch(PDOException $e) {
                // Set a specific error message for connection test
                $connection_test_error = "Database connection failed: " . $e->getMessage();
                // Ensure we stay on step 1 to show the error
                $step = 1;
            }
        }
    } elseif ($step == 2) {
        // Admin account setup
        $admin_username = $_POST['admin_username'];
        $admin_password = $_POST['admin_password'];
        $confirm_password = $_POST['confirm_password'];

        if ($admin_password !== $confirm_password) {
            $error = "Passwords do not match";
        } else {
            $_SESSION['admin_config'] = compact('admin_username', 'admin_password');
            header('Location: install.php?step=3');
            exit;
        }
    } elseif ($step == 3) {
        echo "Debug: Starting Step 3 - Final Installation<br>"; // Debug line 1
        // Final installation
        $db_config = $_SESSION['db_config'];
        $admin_config = $_SESSION['admin_config'];

        try {
            echo "Debug: Generating config file content<br>"; // Debug line 2
            // Create config.php
            $config_content = "<?php\n";
            $config_content .= "// Database configuration - Generated by installer\n";
            $config_content .= "try {\n";

            if ($db_config['db_type'] === 'sqlite') {
                $config_content .= "    \$database_file = 'paper_stock.db';\n";
                $config_content .= "    \$connection = new SQLite3(\$database_file);\n";
            } else {
                $config_content .= "    \$host = '{$db_config['host']}';\n";
                $config_content .= "    \$username = '{$db_config['username']}';\n";
                $config_content .= "    \$password = '{$db_config['password']}';\n";
                $config_content .= "    \$database = '{$db_config['dbname']}';\n";
                $config_content .= "    \$connection = mysqli_connect(\$host, \$username, \$password, \$database);\n";
                $config_content .= "    if (!\$connection) {\n";
                $config_content .= "        die('MySQL Connection failed: ' . mysqli_connect_error());\n";
                $config_content .= "    }\n";
            }

            $config_content .= "} catch(Exception \$e) {\n";
            $config_content .= "    die('Database connection failed: ' . \$e->getMessage());\n";
            $config_content .= "}\n";
            $config_content .= "\n// Create tables if not exist\n";

            // Add admin user creation code to config
            if ($db_config['db_type'] === 'sqlite') {
                $config_content .= "\n// Create default admin user if not exists\n";
                $config_content .= "\$result = \$connection->query(\"SELECT * FROM admin WHERE username = 'admin'\");\n";
                $config_content .= "if (!\$result->fetchArray()) {\n";
                $config_content .= "    \$hashed_password = password_hash('admin123', PASSWORD_DEFAULT);\n";
                $config_content .= "    \$stmt = \$connection->prepare(\"INSERT INTO admin (username, password) VALUES (?, ?)\");\n";
                $config_content .= "    \$stmt->bindValue(1, 'admin');\n";
                $config_content .= "    \$stmt->bindValue(2, \$hashed_password);\n";
                $config_content .= "    \$stmt->execute();\n"; // Corrected line
                $config_content .= "}\n\n";
            }

            if ($db_config['db_type'] === 'sqlite') {
                $config_content .= "\$connection->exec(\"CREATE TABLE IF NOT EXISTS rolls (\n";
                $config_content .= "    id INTEGER PRIMARY KEY AUTOINCREMENT,\n";
                $config_content .= "    rollnumber TEXT NOT NULL,\n";
                $config_content .= "    mainrollnumber TEXT,\n";
                $config_content .= "    material TEXT,\n";
                $config_content .= "    papercompany TEXT,\n";
                $config_content .= "    gsm INTEGER,\n";
                $config_content .= "    width INTEGER,\n";
                $config_content .= "    length INTEGER,\n";
                $config_content .= "    weight REAL,\n";
                $config_content .= "    lotno TEXT,\n";
                $config_content .= "    squaremeter REAL,\n";
                $config_content .= "    rolltype TEXT DEFAULT 'Main Roll',\n";
                $config_content .= "    status TEXT DEFAULT 'Stock',\n";
                $config_content .= "    originalroll TEXT,\n";
                $config_content .= "    jobname TEXT,\n";
                $config_content .= "    jobno TEXT,\n";
                $config_content .= "    jobsize TEXT,\n";
                $config_content .= "    date_added DATETIME DEFAULT CURRENT_TIMESTAMP\n";
                $config_content .= ")\");\n\n";

                $config_content .= "\$connection->exec(\"CREATE TABLE IF NOT EXISTS admin (\n";
                $config_content .= "    id INTEGER PRIMARY KEY AUTOINCREMENT,\n";
                $config_content .= "    username TEXT NOT NULL,\n";
                $config_content .= "    password TEXT NOT NULL\n";
                $config_content .= ")\");\n";
            } else {
                $config_content .= "mysqli_query(\$connection, \"CREATE TABLE IF NOT EXISTS rolls (\n";
                $config_content .= "    id INT AUTO_INCREMENT PRIMARY KEY,\n";
                $config_content .= "    rollnumber VARCHAR(100) NOT NULL,\n";
                $config_content .= "    mainrollnumber VARCHAR(100),\n";
                $config_content .= "    material VARCHAR(100),\n";
                $config_content .= "    papercompany VARCHAR(100),\n";
                $config_content .= "    gsm INT,\n";
                $config_content .= "    width INT,\n";
                $config_content .= "    length INT,\n";
                $config_content .= "    weight DECIMAL(10,2),\n";
                $config_content .= "    lotno VARCHAR(100),\n";
                $config_content .= "    squaremeter DECIMAL(10,2),\n";
                $config_content .= "    rolltype VARCHAR(50) DEFAULT 'Main Roll',\n";
                $config_content .= "    status VARCHAR(50) DEFAULT 'Stock',\n";
                $config_content .= "    originalroll VARCHAR(100),\n";
                $config_content .= "    jobname VARCHAR(100),\n";
                $config_content .= "    jobno VARCHAR(100),\n";
                $config_content .= "    jobsize VARCHAR(100),\n";
                $config_content .= "    date_added TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n";
                $config_content .= ")\");\n\n";

                $config_content .= "mysqli_query(\$connection, \"CREATE TABLE IF NOT EXISTS admin (\n";
                $config_content .= "    id INT AUTO_INCREMENT PRIMARY KEY,\n";
                $config_content .= "    username VARCHAR(50) NOT NULL,\n";
                $config_content .= "    password VARCHAR(255) NOT NULL\n";
                $config_content .= ")\");\n";
            }

            $config_content .= "?>";

            echo "Debug: Attempting to write config.php<br>"; // Debug line 3
            file_put_contents('config.php', $config_content);
            echo "Debug: Finished writing config.php<br>"; // Debug line 4

            // Include config and create admin user
            echo "Debug: Including config.php and attempting database setup<br>"; // Debug line 5
            include 'config.php';

            // Create admin user based on database type
            $hashed_password = password_hash($admin_config['admin_password'], PASSWORD_DEFAULT);

            if ($db_config['db_type'] === 'sqlite') {
                // Check if admin exists (SQLite)
                $result = $connection->query("SELECT * FROM admin WHERE username = '{$admin_config['admin_username']}'");
                if (!$result->fetchArray()) {
                    $stmt = $connection->prepare("INSERT INTO admin (username, password) VALUES (?, ?)");
                    $stmt->bindValue(1, $admin_config['admin_username']);
                    $stmt->bindValue(2, $hashed_password);
                    $stmt->execute();
                }
            } else {
                // Check if admin exists (MySQL)
                $result = mysqli_query($connection, "SELECT * FROM admin WHERE username = '{$admin_config['admin_username']}'");
                if (mysqli_num_rows($result) == 0) {
                    $username = mysqli_real_escape_string($connection, $admin_config['admin_username']);
                    $password = mysqli_real_escape_string($connection, $hashed_password);
                    mysqli_query($connection, "INSERT INTO admin (username, password) VALUES ('$username', '$password')");
                }
            }

            echo "Debug: Attempting admin user creation<br>"; // Debug line 6
            // Clean up session
            session_destroy();
            echo "Debug: Session destroyed<br>"; // Debug line 7

            $success = "Installation completed successfully!";
        } catch(Exception $e) {
            $error = "Installation failed: " . $e->getMessage();
        }
    }
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Paper Stock Management - Installation</title>
    <link href="https://cdn.replit.com/agent/bootstrap-agent-dark-theme.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0">Paper Stock Management System - Installation</h3>
                    </div>
                    <div class="card-body">

                        <?php if ($error): ?>
                            <div class="alert alert-danger"><?= htmlspecialchars($error) ?></div>
                        <?php endif; ?>

                        <?php if ($success): ?>
                            <div class="alert alert-success"><?= htmlspecialchars($success) ?></div>
                            <div class="text-center">
                                <h5>Installation Complete!</h5>
                                <p>Your Paper Stock Management System is ready to use.</p>
                                <p><strong>Default Login:</strong></p>
                                <p>Username: <code><?= htmlspecialchars($_SESSION['admin_config']['admin_username'] ?? 'admin') ?></code></p>
                                <p>Password: <code><?= htmlspecialchars($_SESSION['admin_config']['admin_password'] ?? 'admin123') ?></code></p>
                                <a href="index.html" class="btn btn-success btn-lg">Launch Application</a>
                            </div>
                        <?php elseif ($step == 1): ?>
                            <!-- Step 1: Database Configuration -->
                            <h4>Step 1: Database Configuration</h4>
                            <form method="POST">
                                <div class="mb-3">
                                    <label class="form-label">Database Type</label>
                                    <select name="db_type" class="form-select" onchange="toggleMysqlFields(this.value)">
                                        <option value="sqlite">SQLite (Recommended)</option>
                                        <option value="mysql">MySQL</option>
                                    </select>
                                </div>

                                <div id="mysql-fields" style="display: none;">
                                    <div class="mb-3">
                                        <label class="form-label">Host</label>
                                        <input type="text" name="host" class="form-control" placeholder="localhost">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Database Name</label>
                                        <input type="text" name="dbname" class="form-control" placeholder="paper_stock">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Username</label>
                                        <input type="text" name="username" class="form-control" placeholder="root">
                                    </div>
                                    <div class="mb-3">
                                        <label class="form-label">Password</label>
                                        <input type="password" name="password" class="form-control">
                                    </div>
                                </div>

                                <!-- Add a div to display connection status -->
                                <div id="connection-status" class="mt-3">
                                    <?php if (isset($connection_test_error) && $connection_test_error): ?>
                                        <div class="alert alert-danger"><?= htmlspecialchars($connection_test_error) ?></div>
                                    <?php endif; ?>
                                </div>

                                <button type="button" class="btn btn-secondary me-2" id="test-connection-btn">Test Connection</button>
                                <button type="submit" class="btn btn-primary">Next</button>
                            </form>

                        <?php elseif ($step == 2): ?>
                            <!-- Step 2: Admin Account -->
                            <h4>Step 2: Admin Account Setup</h4>
                            <form method="POST">
                                <div class="mb-3">
                                    <label class="form-label">Admin Username</label>
                                    <input type="text" name="admin_username" class="form-control" value="admin" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Admin Password</label>
                                    <input type="password" name="admin_password" class="form-control" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Confirm Password</label>
                                    <input type="password" name="confirm_password" class="form-control" required>
                                </div>
                                <button type="submit" class="btn btn-primary">Next</button>
                            </form>

                        <?php elseif ($step == 3): ?>
                            <!-- Step 3: Final Installation -->
                            <h4>Step 3: Complete Installation</h4>
                            <p>Ready to install Paper Stock Management System with the following configuration:</p>
                            <ul>
                                <li><strong>Database:</strong> <?= $_SESSION['db_config']['db_type'] ?></li>
                                <li><strong>Admin User:</strong> <?= $_SESSION['admin_config']['admin_username'] ?></li>
                            </ul>
                            <form method="POST">
                                <button type="submit" class="btn btn-success">Install Now</button>
                            </form>
                        <?php endif; ?>

                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
    function toggleMysqlFields(dbType) {
        const mysqlFields = document.getElementById('mysql-fields');
        mysqlFields.style.display = dbType === 'mysql' ? 'block' : 'none';
    }

    document.getElementById('test-connection-btn').addEventListener('click', function() {
        const dbType = document.querySelector('select[name="db_type"]').value;
        const host = document.querySelector('input[name="host"]').value;
        const dbname = document.querySelector('input[name="dbname"]').value;
        const username = document.querySelector('input[name="username"]').value;
        const password = document.querySelector('input[name="password"]').value;
        const connectionStatusDiv = document.getElementById('connection-status');

        connectionStatusDiv.innerHTML = '<div class="alert alert-info">Testing connection...</div>';

        const formData = new FormData();
        formData.append('db_type', dbType);
        formData.append('host', host);
        formData.append('dbname', dbname);
        formData.append('username', username);
        formData.append('password', password);
        formData.append('test_connection', 'true'); // Flag for connection test

        fetch('install.php', {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                connectionStatusDiv.innerHTML = '<div class="alert alert-success">Connection successful!</div>';
            } else {
                connectionStatusDiv.innerHTML = '<div class="alert alert-danger">Connection failed: ' + data.error + '</div>';
            }
        })
        .catch(error => {
            connectionStatusDiv.innerHTML = '<div class="alert alert-danger">An error occurred during the test.</div>';
            console.error('Error:', error);
        });
    });
    </script>
</body>
</html>
